<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MainWndTitle" xml:space="preserve">
    <value>加载中</value>
  </data>
  <data name="LoginWndTitle" xml:space="preserve">
    <value>登录</value>
  </data>
  <data name="LoginButton" xml:space="preserve">
    <value>登录</value>
  </data>
  <data name="LoginEnterCred" xml:space="preserve">
    <value>请在下方输入您的凭据.</value>
  </data>
  <data name="LoginPassword" xml:space="preserve">
    <value>密码:</value>
  </data>
  <data name="LoginUsername" xml:space="preserve">
    <value>用户名:</value>
  </data>
  <data name="LoginWelcome" xml:space="preserve">
    <value>欢迎!</value>
  </data>
  <data name="RegisterButton" xml:space="preserve">
    <value>注册</value>
  </data>
  <data name="RegisterWndTitle" xml:space="preserve">
    <value>确认您的注册信息</value>
  </data>
  <data name="RegisterConfirmUser" xml:space="preserve">
    <value>您的注册用户名为:</value>
  </data>
  <data name="RegisterConfirmPass" xml:space="preserve">
    <value>请在下方确认您的密码:</value>
  </data>
  <data name="LoginPWErrorTT" xml:space="preserve">
    <value>密码只由ASCII字符构成.
并且不少于4个字符.</value>
  </data>
  <data name="LoginUNErrorTT" xml:space="preserve">
    <value>用户名只由英文字母, 数字和下划线构成.
并且不超过20个字符.</value>
  </data>
  <data name="RegisterDoneMsgBoxContent" xml:space="preserve">
    <value>请牢记您的账号和密码.</value>
  </data>
  <data name="RegisterDoneMsgBoxTitle" xml:space="preserve">
    <value>注册成功!</value>
  </data>
  <data name="RegisterFailMsgBoxTitle" xml:space="preserve">
    <value>注册失败.</value>
  </data>
  <data name="LoginFailedStatus" xml:space="preserve">
    <value>用户名或密码错误.</value>
  </data>
  <data name="NavTest" xml:space="preserve">
    <value>测量 (COM设备)</value>
  </data>
  <data name="NavReview" xml:space="preserve">
    <value>评估</value>
  </data>
  <data name="NavExport" xml:space="preserve">
    <value>导出</value>
  </data>
  <data name="NavSettings" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="StatusReady" xml:space="preserve">
    <value>就绪</value>
  </data>
  <data name="StatusLoggedIn" xml:space="preserve">
    <value>用户 %User (%Type) 已登录.</value>
  </data>
  <data name="SaveDataTitle" xml:space="preserve">
    <value>数据列表</value>
  </data>
  <data name="NoCOMTabHeader" xml:space="preserve">
    <value>未能检测到COM设备</value>
  </data>
  <data name="NoCOMTabInstruction" xml:space="preserve">
    <value>请检查系统设置并按F5键刷新.</value>
  </data>
  <data name="RefreshBtn" xml:space="preserve">
    <value>🔄 刷新</value>
  </data>
  <data name="OpenPort" xml:space="preserve">
    <value>打开串口</value>
  </data>
  <data name="ClosePort" xml:space="preserve">
    <value>关闭串口</value>
  </data>
  <data name="BaudRate" xml:space="preserve">
    <value>波特率</value>
  </data>
  <data name="Parity" xml:space="preserve">
    <value>校验</value>
  </data>
  <data name="DataBits" xml:space="preserve">
    <value>数据位</value>
  </data>
  <data name="StopBits" xml:space="preserve">
    <value>停止位</value>
  </data>
  <data name="Handshake" xml:space="preserve">
    <value>握手模式</value>
  </data>
  <data name="Encoding" xml:space="preserve">
    <value>编码</value>
  </data>
  <data name="ReadT" xml:space="preserve">
    <value>读取超时</value>
  </data>
  <data name="WriteT" xml:space="preserve">
    <value>写入超时</value>
  </data>
  <data name="PortPropExpander" xml:space="preserve">
    <value>^^^^串口参数^^^^</value>
  </data>
  <data name="RecvStr" xml:space="preserve">
    <value>接收字符串</value>
  </data>
  <data name="NavProx" xml:space="preserve">
    <value>位移</value>
  </data>
  <data name="NavImg" xml:space="preserve">
    <value>图像设备</value>
  </data>
  <data name="FoundCOMDevices" xml:space="preserve">
    <value>检测到 %Num 个COM设备</value>
  </data>
  <data name="AddRecvStr" xml:space="preserve">
    <value>添加 -&gt;</value>
  </data>
  <data name="AutoAddRecvStr" xml:space="preserve">
    <value>自动添加</value>
  </data>
  <data name="AutoAddRecvStrTT" xml:space="preserve">
    <value>串口打开时, 1秒内没有收到更多数据时将现有数据添加至数据列表.</value>
  </data>
  <data name="ClearAfterAddingRecvStr" xml:space="preserve">
    <value>自动清除</value>
  </data>
  <data name="ClearAfterAddingRecvStrTT" xml:space="preserve">
    <value>添加到数据列表后清除接收字符串框.</value>
  </data>
  <data name="AddInfo" xml:space="preserve">
    <value>补充信息</value>
  </data>
  <data name="TestName" xml:space="preserve">
    <value>测试名称</value>
  </data>
  <data name="UoM" xml:space="preserve">
    <value>测量单位</value>
  </data>
  <data name="AddUnit" xml:space="preserve">
    <value>添加单位</value>
  </data>
  <data name="AddUnitTT" xml:space="preserve">
    <value>保存当前单位以供以后使用.</value>
  </data>
  <data name="AddUnitFail_Existed" xml:space="preserve">
    <value>添加失败: 单位已存在.</value>
  </data>
  <data name="AddUnitFail_Empty" xml:space="preserve">
    <value>添加失败: 单位为空字符串或空格.</value>
  </data>
  <data name="AddUnitSucc" xml:space="preserve">
    <value>添加成功.</value>
  </data>
  <data name="ClearAfterAddingRecvStrDisabledTT" xml:space="preserve">
    <value>使用自动添加时必须开启自动清除.</value>
  </data>
  <data name="SaveAvg" xml:space="preserve">
    <value>保存平均值</value>
  </data>
  <data name="SaveSel" xml:space="preserve">
    <value>保存选择值</value>
  </data>
  <data name="Average" xml:space="preserve">
    <value>平均值</value>
  </data>
  <data name="AverageTT" xml:space="preserve">
    <value>数据列表中数字的平均值.</value>
  </data>
  <data name="DBConnect" xml:space="preserve">
    <value>正在连接至数据库....</value>
  </data>
  <data name="Saved2DB" xml:space="preserve">
    <value>数据已保存</value>
  </data>
  <data name="NotSaved2DB" xml:space="preserve">
    <value>数据保存失败</value>
  </data>
  <data name="ConfirmAddEmptyRecord" xml:space="preserve">
    <value>不完整的测试数据</value>
  </data>
  <data name="ConfirmAddEmptyRecordDesc" xml:space="preserve">
    <value>由于测试名称或测量单位为空或由空格组成, 此次保存需要您再次确认.

选择'否'以返回并更改数据, 或者您也可以选择'是'来添加这条不完整的数据.</value>
  </data>
  <data name="COMClose" xml:space="preserve">
    <value>串口 %Name 已关闭</value>
  </data>
  <data name="COMOpen" xml:space="preserve">
    <value>串口 %Name 已开启</value>
  </data>
  <data name="SettingTitleGeneral" xml:space="preserve">
    <value>通用</value>
  </data>
  <data name="SettingTitleMeasurement" xml:space="preserve">
    <value>测量</value>
  </data>
  <data name="SettingTitleCOM" xml:space="preserve">
    <value>COM</value>
  </data>
  <data name="SettingTitleDisplacement" xml:space="preserve">
    <value>位移</value>
  </data>
  <data name="SettingTitleImg" xml:space="preserve">
    <value>图像</value>
  </data>
  <data name="SettingLang" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="SettingLangSaved" xml:space="preserve">
    <value>已保存语言设置. 但需要重启应用才能完全生效.
您想要现在重启应用吗?</value>
  </data>
  <data name="SettingDefaultCOM" xml:space="preserve">
    <value>新串口的默认值</value>
  </data>
  <data name="PortProp" xml:space="preserve">
    <value>串口参数</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="COMSettingSaved" xml:space="preserve">
    <value>已保存 %PortName 的设置</value>
  </data>
  <data name="ReviewDataType" xml:space="preserve">
    <value>数据类型</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="SQLReviewEx" xml:space="preserve">
    <value>发生了一个SQL错误. 您作出的更改未保存. 以下信息可能会帮到您:

%Exception

要查看最新的有效数据, 请重新执行搜索以更新此列表.</value>
  </data>
  <data name="ReviewConfirmDelete" xml:space="preserve">
    <value>您确定要删除这条记录吗?</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="CameraList" xml:space="preserve">
    <value>相机列表</value>
  </data>
  <data name="SaveImg" xml:space="preserve">
    <value>保存图像</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>文件名</value>
  </data>
  <data name="ImgNameTT" xml:space="preserve">
    <value>不带拓展名的文件名.
单击以使用当前系统时间.</value>
  </data>
  <data name="SaveImgFailed" xml:space="preserve">
    <value>保存图像失败</value>
  </data>
  <data name="F5Refresh" xml:space="preserve">
    <value>您可以使用F5键来刷新.</value>
  </data>
  <data name="OpenFileLoc" xml:space="preserve">
    <value>打开文件位置</value>
  </data>
  <data name="Capabilities" xml:space="preserve">
    <value>支持的模式</value>
  </data>
  <data name="FoundVideoDevices" xml:space="preserve">
    <value>检测到 %Num 个视频设备</value>
  </data>
  <data name="ImageSaved" xml:space="preserve">
    <value>图像已保存</value>
  </data>
  <data name="SettingsNotAvail" xml:space="preserve">
    <value>暂时还没有可以设置的地方....</value>
  </data>
  <data name="SettingsImgDir" xml:space="preserve">
    <value>保存图像路径 (相对)</value>
  </data>
  <data name="SettingsImgDirTT" xml:space="preserve">
    <value>该路径是相对的. 比方说, 输入"SavedImage"将会使图片保存到程序根目录下的"SavedImage"文件夹中.
如此处留空, 图片将会保存到程序根目录下.</value>
  </data>
  <data name="JPEGQuality" xml:space="preserve">
    <value>JPEG 质量</value>
  </data>
  <data name="PLC" xml:space="preserve">
    <value>PLC</value>
  </data>
  <data name="PLCOpenILS" xml:space="preserve">
    <value>打开指令文件</value>
  </data>
  <data name="PLCLoadedILS" xml:space="preserve">
    <value>已加载指令文件 %Path</value>
  </data>
  <data name="PLCNotLoadILS" xml:space="preserve">
    <value>未加载ILS文件.</value>
  </data>
  <data name="NavReviewExport" xml:space="preserve">
    <value>评估 &amp; 导出</value>
  </data>
  <data name="SettingsRevExp" xml:space="preserve">
    <value>评估导出</value>
  </data>
  <data name="ExportCSV" xml:space="preserve">
    <value>导出 CSV</value>
  </data>
  <data name="ExportedCSV" xml:space="preserve">
    <value>已导出至 %Path</value>
  </data>
  <data name="NotExported" xml:space="preserve">
    <value>未导出.</value>
  </data>
  <data name="UpdateInterval" xml:space="preserve">
    <value>更新间隔 (毫秒)</value>
  </data>
  <data name="ParseILSFail" xml:space="preserve">
    <value>无法解析指令文件, 已停止监控.</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>启动主题</value>
  </data>
  <data name="ThemeDark" xml:space="preserve">
    <value>暗</value>
  </data>
  <data name="ThemeLight" xml:space="preserve">
    <value>亮</value>
  </data>
  <data name="ThemeTT" xml:space="preserve">
    <value>更改启动主题. 下次启动时将会使用此主题.
要临时更改主题, 请使用上面的主题按钮.</value>
  </data>
  <data name="SearchFail" xml:space="preserve">
    <value>搜索失败</value>
  </data>
  <data name="AdminChangeUserType" xml:space="preserve">
    <value>已将 %User 的用户类型更改为 %Type.</value>
  </data>
  <data name="WrongSetting" xml:space="preserve">
    <value>设置错误</value>
  </data>
</root>