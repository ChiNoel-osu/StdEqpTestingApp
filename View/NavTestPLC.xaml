<UserControl x:Class="StdEqpTesting.View.NavTestPLC"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:viewmodel="clr-namespace:StdEqpTesting.ViewModel"
			 d:DataContext="{d:DesignInstance Type={x:Type viewmodel:MainViewModel}}"
			 xmlns:local="clr-namespace:StdEqpTesting.View"
			 xmlns:loc="clr-namespace:StdEqpTesting.Localization"
			 mc:Ignorable="d"
			 d:DesignHeight="500"
			 d:DesignWidth="800">
	<!--This keeps the designer happy. The real resource is inherited from HomeViewWindow.-->
	<d:UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/Theme/Dark.xaml" />
				<ResourceDictionary Source="pack://application:,,,/View/GlobalRescDict.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</d:UserControl.Resources>
	<UserControl.Resources>
		<Style TargetType="{x:Type TextBlock}">
			<Setter Property="Foreground"
					Value="{DynamicResource GlobalFG}" />
		</Style>
	</UserControl.Resources>
	<Grid Margin="0,10">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="2*" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="2*" />
		</Grid.ColumnDefinitions>
		<StackPanel Grid.Column="0"
					Orientation="Vertical"
					VerticalAlignment="Center">
			<StackPanel.Resources>
				<Style TargetType="{x:Type Button}">
					<Setter Property="Background"
							Value="Transparent" />
					<Setter Property="BorderBrush"
							Value="Gray" />
					<Setter Property="Foreground"
							Value="{DynamicResource GlobalFG}" />
					<Setter Property="BorderThickness"
							Value="5" />
					<Setter Property="Height"
							Value="50" />
					<Setter Property="Width"
							Value="50" />
					<Setter Property="Tag"
							Value="False" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ButtonBase}">
								<Border x:Name="border"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										SnapsToDevicePixels="true">
									<ContentPresenter x:Name="contentPresenter"
													  Focusable="False"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  Margin="{TemplateBinding Padding}"
													  RecognizesAccessKey="True"
													  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="Button.IsDefaulted"
											 Value="true">
										<Setter Property="BorderBrush"
												TargetName="border"
												Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
									</Trigger>
									<Trigger Property="IsPressed"
											 Value="true">
										<Setter Property="Background"
												Value="{DynamicResource GlobalPressedBD}" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="Margin"
							Value="10" />
					<Style.Triggers>
						<Trigger Property="Tag"
								 Value="True">
							<Setter Property="BorderBrush"
									Value="Lime" />
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
															From="5"
															To="10"
															Duration="0:0:0.5">
											<ThicknessAnimation.EasingFunction>
												<CircleEase EasingMode="EaseOut" />
											</ThicknessAnimation.EasingFunction>
										</ThicknessAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
															From="10"
															To="5"
															Duration="0:0:0.5">
											<ThicknessAnimation.EasingFunction>
												<CircleEase EasingMode="EaseOut" />
											</ThicknessAnimation.EasingFunction>
										</ThicknessAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Setter Property="Cursor"
									Value="Hand" />
						</Trigger>
					</Style.Triggers>
				</Style>
				<Style TargetType="{x:Type StackPanel}">
					<Setter Property="HorizontalAlignment"
							Value="Center" />
					<Setter Property="Orientation"
							Value="Horizontal" />
				</Style>
				<Style TargetType="{x:Type TextBlock}">
					<Setter Property="Foreground"
							Value="{DynamicResource GlobalFG}" />
					<Setter Property="FontFamily"
							Value="Cascadia Code" />
					<Setter Property="VerticalAlignment"
							Value="Center" />
					<Setter Property="FontSize"
							Value="40" />
				</Style>
			</StackPanel.Resources>
			<StackPanel>
				<TextBlock Text="SB1" />
				<Button Tag="{Binding NavTestPLCVM.SB1EN}"
						Command="{Binding NavTestPLCVM.SBToggleCommand}"
						CommandParameter="1" />
			</StackPanel>
			<StackPanel>
				<TextBlock Text="SB2" />
				<Button Tag="{Binding NavTestPLCVM.SB2EN}"
						Command="{Binding NavTestPLCVM.SBToggleCommand}"
						CommandParameter="2" />
			</StackPanel>
			<StackPanel>
				<TextBlock Text="SB3" />
				<Button Tag="{Binding NavTestPLCVM.SB3EN}"
						Command="{Binding NavTestPLCVM.SBToggleCommand}"
						CommandParameter="3" />
			</StackPanel>
			<StackPanel>
				<TextBlock Text="SB4" />
				<Button Tag="{Binding NavTestPLCVM.SB4EN}"
						Command="{Binding NavTestPLCVM.SBToggleCommand}"
						CommandParameter="4" />
			</StackPanel>
			<StackPanel>
				<TextBlock Text="SB5" />
				<Button Tag="{Binding NavTestPLCVM.SB5EN}"
						Command="{Binding NavTestPLCVM.SBToggleCommand}"
						CommandParameter="5" />
			</StackPanel>
			<StackPanel>
				<TextBlock Text="SB6" />
				<Button Tag="{Binding NavTestPLCVM.SB6EN}"
						Command="{Binding NavTestPLCVM.SBToggleCommand}"
						CommandParameter="6" />
			</StackPanel>
		</StackPanel>
		<DockPanel Grid.Column="1">
			<Button DockPanel.Dock="Top"
					Content="{x:Static loc:Loc.PLCOpenILS}"
					Command="{Binding NavTestPLCVM.LoadILSCommand,Mode=OneWay}"
					FontSize="15"
					Height="40"
					Margin="10" />
			<Button DockPanel.Dock="Top"
					Height="25"
					Tag="{Binding NavTestPLCVM.SimStatus}"
					Command="{Binding NavTestPLCVM.SimToggleCommand,Mode=OneWay}"
					Margin="10,0">
				<Button.Style>
					<Style TargetType="{x:Type Button}">
						<Setter Property="Background"
								Value="{DynamicResource GlobalBG}" />
						<Setter Property="BorderBrush"
								Value="Gray" />
						<Setter Property="Foreground"
								Value="{DynamicResource GlobalFG}" />
						<Setter Property="BorderThickness"
								Value="2" />
						<Setter Property="HorizontalContentAlignment"
								Value="Center" />
						<Setter Property="VerticalContentAlignment"
								Value="Center" />
						<Setter Property="Padding"
								Value="0" />
						<Setter Property="Content"
								Value="{x:Static loc:Loc.Start}" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ButtonBase}">
									<Border x:Name="border"
											Background="{TemplateBinding Background}"
											BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="{TemplateBinding BorderThickness}"
											SnapsToDevicePixels="true">
										<ContentPresenter x:Name="contentPresenter"
														  Focusable="False"
														  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														  Margin="{TemplateBinding Padding}"
														  RecognizesAccessKey="True"
														  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
														  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="Button.IsDefaulted"
												 Value="true">
											<Setter Property="BorderBrush"
													TargetName="border"
													Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
										</Trigger>
										<Trigger Property="IsMouseOver"
												 Value="true">
											<Setter Property="Background"
													TargetName="border"
													Value="{DynamicResource GlobalMouseoverBG}" />
											<Setter Property="BorderBrush"
													TargetName="border"
													Value="{DynamicResource GlobalMouseoverBD}" />
											<Trigger.EnterActions>
												<BeginStoryboard>
													<Storyboard>
														<ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
																			From="2"
																			To="3"
																			Duration="0:0:0.5">
															<ThicknessAnimation.EasingFunction>
																<CircleEase EasingMode="EaseOut" />
															</ThicknessAnimation.EasingFunction>
														</ThicknessAnimation>
													</Storyboard>
												</BeginStoryboard>
											</Trigger.EnterActions>
											<Trigger.ExitActions>
												<BeginStoryboard>
													<Storyboard>
														<ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
																			From="3"
																			To="2"
																			AccelerationRatio="0.8"
																			Duration="0:0:0.2" />
													</Storyboard>
												</BeginStoryboard>
											</Trigger.ExitActions>
										</Trigger>
										<Trigger Property="IsPressed"
												 Value="true">
											<Setter Property="Background"
													TargetName="border"
													Value="{DynamicResource GlobalPressedBG}" />
											<Setter Property="BorderBrush"
													TargetName="border"
													Value="{DynamicResource GlobalPressedBD}" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Style.Triggers>
							<Trigger Property="Tag"
									 Value="True">
								<Setter Property="Content"
										Value="{x:Static loc:Loc.Stop}" />
								<Setter Property="BorderBrush"
										Value="Lime" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</Button.Style>
			</Button>
			<TextBox DockPanel.Dock="Bottom"
					 Margin="10"
					 IsReadOnly="True"
					 MinHeight="50"
					 Text="{Binding NavTestPLCVM.ILSText,Mode=OneWay}"
					 Background="Transparent" />
		</DockPanel>
		<StackPanel Grid.Column="2"
					Orientation="Vertical"
					VerticalAlignment="Center">
			<StackPanel.Resources>
				<Style TargetType="{x:Type StackPanel}">
					<Setter Property="HorizontalAlignment"
							Value="Center" />
					<Setter Property="Orientation"
							Value="Horizontal" />
				</Style>
				<Style TargetType="{x:Type Ellipse}">
					<Setter Property="Height"
							Value="50" />
					<Setter Property="Width"
							Value="50" />
					<Setter Property="Stroke"
							Value="Gray" />
					<Setter Property="Fill"
							Value="{DynamicResource GlobalBG}" />
					<Setter Property="StrokeThickness"
							Value="4" />
					<Setter Property="Margin"
							Value="10" />
					<Style.Triggers>
						<Trigger Property="Tag"
								 Value="True">
							<Setter Property="Fill"
									Value="Lime" />
						</Trigger>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Setter Property="Cursor"
									Value="No" />
						</Trigger>
					</Style.Triggers>
				</Style>
				<Style TargetType="{x:Type TextBlock}">
					<Setter Property="Foreground"
							Value="{DynamicResource GlobalFG}" />
					<Setter Property="FontFamily"
							Value="Cascadia Code" />
					<Setter Property="VerticalAlignment"
							Value="Center" />
					<Setter Property="FontSize"
							Value="40" />
				</Style>
			</StackPanel.Resources>
			<StackPanel>
				<Ellipse Tag="{Binding NavTestPLCVM.Q01}" />
				<TextBlock Text="Q01" />
			</StackPanel>
			<StackPanel>
				<Ellipse Tag="{Binding NavTestPLCVM.Q02}" />
				<TextBlock Text="Q02" />
			</StackPanel>
			<StackPanel>
				<Ellipse Tag="{Binding NavTestPLCVM.Q03}" />
				<TextBlock Text="Q03" />
			</StackPanel>
			<StackPanel>
				<Ellipse Tag="{Binding NavTestPLCVM.Q04}" />
				<TextBlock Text="Q04" />
			</StackPanel>
		</StackPanel>
	</Grid>
</UserControl>
